# Generated by Django 5.2.4 on 2025-08-24 18:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_permission_permissionaudit_permissiongroup_and_more'),
        ('evaluations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppraisalAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_evaluations', models.PositiveIntegerField(default=0)),
                ('completed_evaluations', models.PositiveIntegerField(default=0)),
                ('average_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('top_performers_count', models.PositiveIntegerField(default=0)),
                ('improvement_needed_count', models.PositiveIntegerField(default=0)),
                ('kpi_trends', models.JSONField(default=dict)),
                ('approval_times', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AppraisalFormTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('form_type', models.CharField(choices=[('annual', 'Annual Review'), ('probation', 'Probation Review'), ('promotion', 'Promotion Review'), ('quarterly', 'Quarterly Review'), ('custom', 'Custom')], max_length=20)),
                ('target_staff_levels', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ConditionalApprovalRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('condition_type', models.CharField(choices=[('score_threshold', 'Score Threshold'), ('kpi_failure', 'KPI Failure'), ('department', 'Department Specific'), ('role', 'Role Specific'), ('custom', 'Custom Condition')], max_length=20)),
                ('condition_parameters', models.JSONField()),
                ('action', models.CharField(choices=[('add_approver', 'Add Approver'), ('escalate', 'Escalate to Higher Level'), ('notify_hr', 'Notify HR'), ('require_improvement_plan', 'Require Improvement Plan')], max_length=30)),
                ('action_parameters', models.JSONField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FormKPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('is_required', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('goal_type', models.CharField(choices=[('individual', 'Individual'), ('team', 'Team'), ('department', 'Department'), ('company', 'Company')], max_length=20)),
                ('target_date', models.DateField()),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-target_date'],
            },
        ),
        migrations.CreateModel(
            name='GoalProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('notes', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='KPIResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_assessment_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('self_assessment_comment', models.TextField(blank=True)),
                ('supervisor_assessment_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('supervisor_assessment_comment', models.TextField(blank=True)),
                ('final_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('final_comment', models.TextField(blank=True)),
                ('auto_calculated_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['kpi__name'],
            },
        ),
        migrations.CreateModel(
            name='KPITemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('kpi_type', models.CharField(choices=[('quantitative', 'Quantitative'), ('qualitative', 'Qualitative'), ('percentage', 'Percentage'), ('currency', 'Currency'), ('boolean', 'Yes/No'), ('rating', 'Rating'), ('count', 'Count'), ('duration', 'Duration'), ('ratio', 'Ratio'), ('index', 'Index')], max_length=20)),
                ('visibility', models.CharField(choices=[('all', 'All Staff'), ('management', 'Management Only'), ('hr', 'HR Only'), ('department', 'Department Specific'), ('role', 'Role Specific'), ('level', 'Level Specific'), ('custom', 'Custom Targeting')], default='all', max_length=20)),
                ('target_staff_levels', models.JSONField(blank=True, default=list)),
                ('unit_of_measure', models.CharField(blank=True, max_length=50)),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('default_weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('threshold_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_auto_calculated', models.BooleanField(default=False)),
                ('data_source', models.CharField(blank=True, max_length=100)),
                ('calculation_formula', models.TextField(blank=True)),
                ('calculation_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('on_demand', 'On Demand')], default='monthly', max_length=20)),
                ('creation_permissions', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_template', models.BooleanField(default=False)),
                ('template_category', models.CharField(blank=True, max_length=50)),
                ('requires_approval', models.BooleanField(default=False)),
                ('scoring_method', models.CharField(choices=[('linear', 'Linear'), ('exponential', 'Exponential'), ('threshold', 'Threshold'), ('custom', 'Custom Formula')], default='linear', max_length=20)),
                ('scoring_criteria', models.JSONField(blank=True, default=dict)),
                ('version', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PeerFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_data', models.JSONField()),
                ('is_anonymous', models.BooleanField(default=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='evaluationapproval',
            options={'ordering': ['approval_level__level']},
        ),
        migrations.AlterModelOptions(
            name='performanceaspect',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='performancerating',
            options={'ordering': ['aspect__name']},
        ),
        migrations.AlterModelOptions(
            name='trainingneed',
            options={'ordering': ['-priority', 'training_area']},
        ),
        migrations.RenameIndex(
            model_name='evaluationform',
            new_name='evaluations_user_id_e41f43_idx',
            old_name='evaluations_user_id_04af5e_idx',
        ),
        migrations.RenameIndex(
            model_name='evaluationform',
            new_name='evaluations_status_f75b59_idx',
            old_name='evaluations_status_43c303_idx',
        ),
        migrations.RenameIndex(
            model_name='evaluationform',
            new_name='evaluations_period__6097b2_idx',
            old_name='evaluations_period__39e741_idx',
        ),
        migrations.RemoveField(
            model_name='careerdevelopmentplan',
            name='different_job_same_grade',
        ),
        migrations.RemoveField(
            model_name='careerdevelopmentplan',
            name='reasons',
        ),
        migrations.RemoveField(
            model_name='careerdevelopmentplan',
            name='recommended_by',
        ),
        migrations.RemoveField(
            model_name='careerdevelopmentplan',
            name='transfer_similar_level',
        ),
        migrations.RemoveField(
            model_name='evaluationform',
            name='final_review_by',
        ),
        migrations.RemoveField(
            model_name='evaluationform',
            name='performance_rating',
        ),
        migrations.RemoveField(
            model_name='evaluationform',
            name='supervisor_assessed_by',
        ),
        migrations.RemoveField(
            model_name='evaluationform',
            name='total_score',
        ),
        migrations.AlterUniqueTogether(
            name='evaluationquestion',
            unique_together={('section', 'order', 'version')},
        ),
        migrations.RemoveField(
            model_name='evaluationrecommendation',
            name='justification',
        ),
        migrations.RemoveField(
            model_name='evaluationrecommendation',
            name='recommendation_type',
        ),
        migrations.RemoveField(
            model_name='performanceaspect',
            name='max_weighted_score',
        ),
        migrations.RemoveField(
            model_name='performanceaspect',
            name='order',
        ),
        migrations.RemoveField(
            model_name='performanceaspect',
            name='staff_level',
        ),
        migrations.AlterUniqueTogether(
            name='performancerating',
            unique_together={('evaluation_form', 'aspect', 'rated_by')},
        ),
        migrations.RemoveField(
            model_name='trainingneed',
            name='identified_by',
        ),
        migrations.RemoveField(
            model_name='trainingneed',
            name='training_type',
        ),
        migrations.AddField(
            model_name='careerdevelopmentplan',
            name='development_actions',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='careerdevelopmentplan',
            name='long_term_goals',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='careerdevelopmentplan',
            name='mentor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentored_plans', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='careerdevelopmentplan',
            name='short_term_goals',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='careerdevelopmentplan',
            name='timeline',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='evaluationperiod',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='condition_type',
            field=models.CharField(blank=True, choices=[('equals', 'Equals'), ('not_equals', 'Not Equals'), ('contains', 'Contains'), ('greater_than', 'Greater Than'), ('less_than', 'Less Than'), ('is_empty', 'Is Empty'), ('is_not_empty', 'Is Not Empty')], max_length=20),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='condition_value',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='default_value',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='depends_on_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependent_questions', to='evaluations.evaluationquestion'),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='is_template',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='max_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='min_value',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='placeholder_text',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='question_text',
            field=models.CharField(default='', max_length=500),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='required',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='scoring_criteria',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='target_departments',
            field=models.ManyToManyField(blank=True, related_name='evaluation_questions', to='core.department'),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='target_roles',
            field=models.ManyToManyField(blank=True, related_name='evaluation_questions', to='core.role'),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='target_staff_levels',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='template_category',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='version',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='evaluationquestion',
            name='weight',
            field=models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
        ),
        migrations.AddField(
            model_name='evaluationrecommendation',
            name='areas_for_improvement',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='evaluationrecommendation',
            name='overall_rating',
            field=models.PositiveIntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Above Average'), (5, 'Excellent')], default=3),
        ),
        migrations.AddField(
            model_name='evaluationrecommendation',
            name='recommendations',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='evaluationrecommendation',
            name='strengths',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='trainingneed',
            name='estimated_cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='trainingneed',
            name='timeline',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='trainingneed',
            name='training_area',
            field=models.CharField(default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='evaluationapproval',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='evaluationform',
            name='final_review_data',
            field=models.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='evaluationform',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='evaluations.evaluationperiod'),
        ),
        migrations.AlterField(
            model_name='evaluationform',
            name='self_appraisal_data',
            field=models.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='evaluationform',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', max_length=20),
        ),
        migrations.AlterField(
            model_name='evaluationform',
            name='supervisor_assessment_data',
            field=models.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='evaluationform',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='evaluationperiod',
            name='is_open_for_submission',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='evaluationperiod',
            name='name',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name='evaluationperiod',
            name='submission_deadline',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='evaluationquestion',
            name='options',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='evaluationquestion',
            name='order',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='evaluationquestion',
            name='question_type',
            field=models.CharField(choices=[('text', 'Text'), ('textarea', 'Text Area'), ('select', 'Select'), ('date', 'Date'), ('number', 'Number'), ('rating', 'Rating'), ('boolean', 'Yes/No'), ('file_upload', 'File Upload'), ('signature', 'Digital Signature'), ('matrix', 'Matrix Question'), ('ranking', 'Ranking'), ('scale', 'Scale')], default='text', max_length=20),
        ),
        migrations.AlterField(
            model_name='evaluationquestion',
            name='section',
            field=models.CharField(choices=[('personal_data', 'Personal Data'), ('qualifications', 'Qualifications'), ('training', 'Training'), ('responsibilities', 'Responsibilities'), ('challenges', 'Challenges'), ('goals', 'Goals'), ('leadership', 'Leadership'), ('teamwork', 'Teamwork'), ('innovation', 'Innovation'), ('communication', 'Communication'), ('problem_solving', 'Problem Solving'), ('technical_skills', 'Technical Skills'), ('project_management', 'Project Management'), ('customer_service', 'Customer Service'), ('quality_management', 'Quality Management'), ('compliance', 'Compliance'), ('safety', 'Safety'), ('performance', 'Performance'), ('development', 'Development'), ('feedback', 'Feedback')], default='personal_data', max_length=20),
        ),
        migrations.AlterField(
            model_name='evaluationrecommendation',
            name='recommended_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='performanceaspect',
            name='description',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='performanceaspect',
            name='name',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name='performancerating',
            name='evaluation_form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='evaluations.evaluationform'),
        ),
        migrations.AlterField(
            model_name='performancerating',
            name='rated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='performancerating',
            name='rating',
            field=models.PositiveIntegerField(choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Above Average'), (5, 'Excellent')]),
        ),
        migrations.AlterField(
            model_name='trainingneed',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=20),
        ),
        migrations.AlterModelTable(
            name='careerdevelopmentplan',
            table=None,
        ),
        migrations.AlterModelTable(
            name='evaluationapproval',
            table=None,
        ),
        migrations.AlterModelTable(
            name='evaluationform',
            table=None,
        ),
        migrations.AlterModelTable(
            name='evaluationperiod',
            table=None,
        ),
        migrations.AlterModelTable(
            name='evaluationquestion',
            table=None,
        ),
        migrations.AlterModelTable(
            name='evaluationrecommendation',
            table=None,
        ),
        migrations.AlterModelTable(
            name='performanceaspect',
            table=None,
        ),
        migrations.AlterModelTable(
            name='performancerating',
            table=None,
        ),
        migrations.AlterModelTable(
            name='trainingneed',
            table=None,
        ),
        migrations.AddField(
            model_name='appraisalanalytics',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department'),
        ),
        migrations.AddField(
            model_name='appraisalanalytics',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationperiod'),
        ),
        migrations.AddField(
            model_name='appraisalformtemplate',
            name='approval_workflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.approvalworkflow'),
        ),
        migrations.AddField(
            model_name='appraisalformtemplate',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appraisalformtemplate',
            name='target_departments',
            field=models.ManyToManyField(blank=True, to='core.department'),
        ),
        migrations.AddField(
            model_name='evaluationform',
            name='form_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='evaluations.appraisalformtemplate'),
        ),
        migrations.AddField(
            model_name='formkpi',
            name='form_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.appraisalformtemplate'),
        ),
        migrations.AddField(
            model_name='goal',
            name='assigned_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_goals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='goal',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_goals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='goal',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department'),
        ),
        migrations.AddField(
            model_name='goalprogress',
            name='goal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_updates', to='evaluations.goal'),
        ),
        migrations.AddField(
            model_name='goalprogress',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kpiresponse',
            name='evaluation_form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpi_responses', to='evaluations.evaluationform'),
        ),
        migrations.AddField(
            model_name='kpitemplate',
            name='approval_workflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.approvalworkflow'),
        ),
        migrations.AddField(
            model_name='kpitemplate',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kpitemplate',
            name='created_by_role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_kpis', to='core.role'),
        ),
        migrations.AddField(
            model_name='kpitemplate',
            name='target_departments',
            field=models.ManyToManyField(blank=True, related_name='kpi_templates', to='core.department'),
        ),
        migrations.AddField(
            model_name='kpitemplate',
            name='target_positions',
            field=models.ManyToManyField(blank=True, related_name='kpi_templates', to='core.position'),
        ),
        migrations.AddField(
            model_name='kpitemplate',
            name='target_roles',
            field=models.ManyToManyField(blank=True, related_name='kpi_templates', to='core.role'),
        ),
        migrations.AddField(
            model_name='kpiresponse',
            name='kpi',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.kpitemplate'),
        ),
        migrations.AddField(
            model_name='goal',
            name='kpi_target',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='evaluations.kpitemplate'),
        ),
        migrations.AddField(
            model_name='formkpi',
            name='kpi',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.kpitemplate'),
        ),
        migrations.AddField(
            model_name='appraisalformtemplate',
            name='kpis',
            field=models.ManyToManyField(through='evaluations.FormKPI', to='evaluations.kpitemplate'),
        ),
        migrations.AddField(
            model_name='peerfeedback',
            name='evaluation_form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peer_feedback', to='evaluations.evaluationform'),
        ),
        migrations.AddField(
            model_name='peerfeedback',
            name='feedback_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provided_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='peerfeedback',
            name='feedback_recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='evaluationquestion',
            name='max_score',
        ),
        migrations.RemoveField(
            model_name='evaluationquestion',
            name='staff_level',
        ),
        migrations.RemoveField(
            model_name='evaluationquestion',
            name='text',
        ),
        migrations.RemoveField(
            model_name='performancerating',
            name='score',
        ),
        migrations.AlterUniqueTogether(
            name='appraisalanalytics',
            unique_together={('period', 'department')},
        ),
        migrations.AlterUniqueTogether(
            name='kpitemplate',
            unique_together={('name', 'version')},
        ),
        migrations.AlterUniqueTogether(
            name='kpiresponse',
            unique_together={('evaluation_form', 'kpi')},
        ),
        migrations.AlterUniqueTogether(
            name='formkpi',
            unique_together={('form_template', 'kpi')},
        ),
        migrations.AlterUniqueTogether(
            name='appraisalformtemplate',
            unique_together={('name', 'version')},
        ),
        migrations.AlterUniqueTogether(
            name='peerfeedback',
            unique_together={('evaluation_form', 'feedback_provider', 'feedback_recipient')},
        ),
    ]
